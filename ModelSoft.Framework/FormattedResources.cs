//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelSoft.Framework.Properties
{
  using System;

  /// <summary>
  ///   A strongly-typed resource class, for looking up localized strings, etc.
  /// </summary>
  // This class was auto-generated by the FormattedResources.tt
  // template via a tool like Visual Studio.
  // To add or remove a member, edit your .ResX file then regenerate the template 
  // in your VS project.

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  public class FormattedResources {
    
    #region [ Common ]
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal FormattedResources() { }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public static global::System.Resources.ResourceManager ResourceManager {
      get {
        if (object.ReferenceEquals(resourceMan, null)) {
          global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ModelSoft.Framework.Properties.Resources", typeof(Resources).Assembly);
          resourceMan = temp;
        }
        return resourceMan;
      }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public static global::System.Globalization.CultureInfo Culture {
      get {
        return resourceCulture ?? global::System.Globalization.CultureInfo.CurrentUICulture;
      }
      set {
        resourceCulture = value;
      }
    }
    #endregion [ Common ]


    #region [ ArgException_Collection ]
	
    /// <summary>
    ///   Looks up a localized string similar to Collection
    /// </summary>
    public static string ArgException_Collection(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ArgException_Collection", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Collection
    /// </summary>
    public static string GetArgException_Collection() {
      return ArgException_Collection(resourceCulture);
    }
    #endregion [ ArgException_Collection ]

    #region [ ArgException_ConditionIsNotMeet ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not meet the condition: {1}.
    /// </summary>
    public static string GetArgException_ConditionIsNotMeet(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgException_ConditionIsNotMeet", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not meet the condition: {1}.
    /// </summary>
    public static string GetArgException_ConditionIsNotMeet() {
      return GetArgException_ConditionIsNotMeet(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not meet the condition: {1}.
    /// </summary>
    public static string ArgException_ConditionIsNotMeet(global::System.Globalization.CultureInfo __culture, string variableName, string condition) {
      string format = ResourceManager.GetString("ArgException_ConditionIsNotMeet", __culture);
      return string.Format(__culture, format, variableName, condition);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} do not meet the condition: {1}.
    /// </summary>
    public static string ArgException_ConditionIsNotMeet(string variableName, string condition) {
      return ArgException_ConditionIsNotMeet(resourceCulture, variableName, condition);
    }
    #endregion [ ArgException_ConditionIsNotMeet ]

    #region [ ArgException_EnumIsNotValid ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} has invalid {1} value. Actual value is: {2}.
    /// </summary>
    public static string GetArgException_EnumIsNotValid(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgException_EnumIsNotValid", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} has invalid {1} value. Actual value is: {2}.
    /// </summary>
    public static string GetArgException_EnumIsNotValid() {
      return GetArgException_EnumIsNotValid(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} has invalid {1} value. Actual value is: {2}.
    /// </summary>
    public static string ArgException_EnumIsNotValid(global::System.Globalization.CultureInfo __culture, string variableName, string enumType, string actualValue) {
      string format = ResourceManager.GetString("ArgException_EnumIsNotValid", __culture);
      return string.Format(__culture, format, variableName, enumType, actualValue);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} has invalid {1} value. Actual value is: {2}.
    /// </summary>
    public static string ArgException_EnumIsNotValid(string variableName, string enumType, string actualValue) {
      return ArgException_EnumIsNotValid(resourceCulture, variableName, enumType, actualValue);
    }
    #endregion [ ArgException_EnumIsNotValid ]

    #region [ ArgException_KeyNotFound ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} not found: {1}
    /// </summary>
    public static string GetArgException_KeyNotFound(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgException_KeyNotFound", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} not found: {1}
    /// </summary>
    public static string GetArgException_KeyNotFound() {
      return GetArgException_KeyNotFound(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} not found: {1}
    /// </summary>
    public static string ArgException_KeyNotFound(global::System.Globalization.CultureInfo __culture, string variableName, string key) {
      string format = ResourceManager.GetString("ArgException_KeyNotFound", __culture);
      return string.Format(__culture, format, variableName, key);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} not found: {1}
    /// </summary>
    public static string ArgException_KeyNotFound(string variableName, string key) {
      return ArgException_KeyNotFound(resourceCulture, variableName, key);
    }
    #endregion [ ArgException_KeyNotFound ]

    #region [ ArgException_Max ]
	
    /// <summary>
    ///   Looks up a localized string similar to Maximum
    /// </summary>
    public static string ArgException_Max(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ArgException_Max", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Maximum
    /// </summary>
    public static string GetArgException_Max() {
      return ArgException_Max(resourceCulture);
    }
    #endregion [ ArgException_Max ]

    #region [ ArgException_Min ]
	
    /// <summary>
    ///   Looks up a localized string similar to Minimum
    /// </summary>
    public static string ArgException_Min(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ArgException_Min", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Minimum
    /// </summary>
    public static string GetArgException_Min() {
      return ArgException_Min(resourceCulture);
    }
    #endregion [ ArgException_Min ]

    #region [ ArgException_NotAllElementsMatchCondition ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not match condition.
    /// </summary>
    public static string GetArgException_NotAllElementsMatchCondition(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgException_NotAllElementsMatchCondition", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not match condition.
    /// </summary>
    public static string GetArgException_NotAllElementsMatchCondition() {
      return GetArgException_NotAllElementsMatchCondition(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not match condition.
    /// </summary>
    public static string ArgException_NotAllElementsMatchCondition(global::System.Globalization.CultureInfo __culture, string value) {
      string format = ResourceManager.GetString("ArgException_NotAllElementsMatchCondition", __culture);
      return string.Format(__culture, format, value);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} do not match condition.
    /// </summary>
    public static string ArgException_NotAllElementsMatchCondition(string value) {
      return ArgException_NotAllElementsMatchCondition(resourceCulture, value);
    }
    #endregion [ ArgException_NotAllElementsMatchCondition ]

    #region [ ArgException_StringIsNotEmpty ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must not be empty.
    /// </summary>
    public static string GetArgException_StringIsNotEmpty(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgException_StringIsNotEmpty", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must not be empty.
    /// </summary>
    public static string GetArgException_StringIsNotEmpty() {
      return GetArgException_StringIsNotEmpty(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must not be empty.
    /// </summary>
    public static string ArgException_StringIsNotEmpty(global::System.Globalization.CultureInfo __culture, string variableName) {
      string format = ResourceManager.GetString("ArgException_StringIsNotEmpty", __culture);
      return string.Format(__culture, format, variableName);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} must not be empty.
    /// </summary>
    public static string ArgException_StringIsNotEmpty(string variableName) {
      return ArgException_StringIsNotEmpty(resourceCulture, variableName);
    }
    #endregion [ ArgException_StringIsNotEmpty ]

    #region [ ArgException_StringIsNotWhitespace ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must not be blank.
    /// </summary>
    public static string GetArgException_StringIsNotWhitespace(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgException_StringIsNotWhitespace", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must not be blank.
    /// </summary>
    public static string GetArgException_StringIsNotWhitespace() {
      return GetArgException_StringIsNotWhitespace(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must not be blank.
    /// </summary>
    public static string ArgException_StringIsNotWhitespace(global::System.Globalization.CultureInfo __culture, string variableName) {
      string format = ResourceManager.GetString("ArgException_StringIsNotWhitespace", __culture);
      return string.Format(__culture, format, variableName);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} must not be blank.
    /// </summary>
    public static string ArgException_StringIsNotWhitespace(string variableName) {
      return ArgException_StringIsNotWhitespace(resourceCulture, variableName);
    }
    #endregion [ ArgException_StringIsNotWhitespace ]

    #region [ ArgException_SurrogateNotAllowedAsSingleChar ]
	
    /// <summary>
    ///   Looks up a localized string similar to Surrogates not allowed as single char.
    /// </summary>
    public static string ArgException_SurrogateNotAllowedAsSingleChar(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ArgException_SurrogateNotAllowedAsSingleChar", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Surrogates not allowed as single char.
    /// </summary>
    public static string GetArgException_SurrogateNotAllowedAsSingleChar() {
      return ArgException_SurrogateNotAllowedAsSingleChar(resourceCulture);
    }
    #endregion [ ArgException_SurrogateNotAllowedAsSingleChar ]

    #region [ ArgException_Value ]
	
    /// <summary>
    ///   Looks up a localized string similar to Value
    /// </summary>
    public static string ArgException_Value(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ArgException_Value", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Value
    /// </summary>
    public static string GetArgException_Value() {
      return ArgException_Value(resourceCulture);
    }
    #endregion [ ArgException_Value ]

    #region [ ArgOutOfRange_MaxMsg ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be lesser than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string GetArgOutOfRange_MaxMsg(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgOutOfRange_MaxMsg", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be lesser than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string GetArgOutOfRange_MaxMsg() {
      return GetArgOutOfRange_MaxMsg(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be lesser than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string ArgOutOfRange_MaxMsg(global::System.Globalization.CultureInfo __culture, string variableName, string actualValue, string maxValue) {
      string format = ResourceManager.GetString("ArgOutOfRange_MaxMsg", __culture);
      return string.Format(__culture, format, variableName, actualValue, maxValue);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} must be lesser than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string ArgOutOfRange_MaxMsg(string variableName, string actualValue, string maxValue) {
      return ArgOutOfRange_MaxMsg(resourceCulture, variableName, actualValue, maxValue);
    }
    #endregion [ ArgOutOfRange_MaxMsg ]

    #region [ ArgOutOfRange_MinMaxMsg ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be between {2} and {3}. Actual value is {1}.
    /// </summary>
    public static string GetArgOutOfRange_MinMaxMsg(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgOutOfRange_MinMaxMsg", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be between {2} and {3}. Actual value is {1}.
    /// </summary>
    public static string GetArgOutOfRange_MinMaxMsg() {
      return GetArgOutOfRange_MinMaxMsg(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be between {2} and {3}. Actual value is {1}.
    /// </summary>
    public static string ArgOutOfRange_MinMaxMsg(global::System.Globalization.CultureInfo __culture, string variableName, string actualValue, string minValue, string maxValue) {
      string format = ResourceManager.GetString("ArgOutOfRange_MinMaxMsg", __culture);
      return string.Format(__culture, format, variableName, actualValue, minValue, maxValue);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} must be between {2} and {3}. Actual value is {1}.
    /// </summary>
    public static string ArgOutOfRange_MinMaxMsg(string variableName, string actualValue, string minValue, string maxValue) {
      return ArgOutOfRange_MinMaxMsg(resourceCulture, variableName, actualValue, minValue, maxValue);
    }
    #endregion [ ArgOutOfRange_MinMaxMsg ]

    #region [ ArgOutOfRange_MinMaxValidMsg ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} and {1} must be ordered. Actual values are {2} and {3}.
    /// </summary>
    public static string GetArgOutOfRange_MinMaxValidMsg(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgOutOfRange_MinMaxValidMsg", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} and {1} must be ordered. Actual values are {2} and {3}.
    /// </summary>
    public static string GetArgOutOfRange_MinMaxValidMsg() {
      return GetArgOutOfRange_MinMaxValidMsg(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} and {1} must be ordered. Actual values are {2} and {3}.
    /// </summary>
    public static string ArgOutOfRange_MinMaxValidMsg(global::System.Globalization.CultureInfo __culture, string minVarName, string maxVarName, string minValue, string maxValue) {
      string format = ResourceManager.GetString("ArgOutOfRange_MinMaxValidMsg", __culture);
      return string.Format(__culture, format, minVarName, maxVarName, minValue, maxValue);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} and {1} must be ordered. Actual values are {2} and {3}.
    /// </summary>
    public static string ArgOutOfRange_MinMaxValidMsg(string minVarName, string maxVarName, string minValue, string maxValue) {
      return ArgOutOfRange_MinMaxValidMsg(resourceCulture, minVarName, maxVarName, minValue, maxValue);
    }
    #endregion [ ArgOutOfRange_MinMaxValidMsg ]

    #region [ ArgOutOfRange_MinMsg ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be greater than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string GetArgOutOfRange_MinMsg(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ArgOutOfRange_MinMsg", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be greater than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string GetArgOutOfRange_MinMsg() {
      return GetArgOutOfRange_MinMsg(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be greater than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string ArgOutOfRange_MinMsg(global::System.Globalization.CultureInfo __culture, string variableName, string actualValue, string minValue) {
      string format = ResourceManager.GetString("ArgOutOfRange_MinMsg", __culture);
      return string.Format(__culture, format, variableName, actualValue, minValue);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} must be greater than or equal to {2}. Actual value is {1}.
    /// </summary>
    public static string ArgOutOfRange_MinMsg(string variableName, string actualValue, string minValue) {
      return ArgOutOfRange_MinMsg(resourceCulture, variableName, actualValue, minValue);
    }
    #endregion [ ArgOutOfRange_MinMsg ]

    #region [ EnumerableExtensions_Periods ]
	
    /// <summary>
    ///   Looks up a localized string similar to ...
    /// </summary>
    public static string EnumerableExtensions_Periods(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("EnumerableExtensions_Periods", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to ...
    /// </summary>
    public static string GetEnumerableExtensions_Periods() {
      return EnumerableExtensions_Periods(resourceCulture);
    }
    #endregion [ EnumerableExtensions_Periods ]

    #region [ ExMsg_DecrementOutOfRange ]
	
    /// <summary>
    ///   Looks up a localized string similar to Decrementing {0} is out of range for type {1}
    /// </summary>
    public static string GetExMsg_DecrementOutOfRange(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DecrementOutOfRange", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Decrementing {0} is out of range for type {1}
    /// </summary>
    public static string GetExMsg_DecrementOutOfRange() {
      return GetExMsg_DecrementOutOfRange(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Decrementing {0} is out of range for type {1}
    /// </summary>
    public static string ExMsg_DecrementOutOfRange(global::System.Globalization.CultureInfo __culture, string value, string type) {
      string format = ResourceManager.GetString("ExMsg_DecrementOutOfRange", __culture);
      return string.Format(__culture, format, value, type);
    }

    /// <summary>
    ///   Looks up a localized string similar to Decrementing {0} is out of range for type {1}
    /// </summary>
    public static string ExMsg_DecrementOutOfRange(string value, string type) {
      return ExMsg_DecrementOutOfRange(resourceCulture, value, type);
    }
    #endregion [ ExMsg_DecrementOutOfRange ]

    #region [ ExMsg_DefaultInstanceAlreadySetUp ]
	
    /// <summary>
    ///   Looks up a localized string similar to Default instance is already setup.
    /// </summary>
    public static string ExMsg_DefaultInstanceAlreadySetUp(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_DefaultInstanceAlreadySetUp", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Default instance is already setup.
    /// </summary>
    public static string GetExMsg_DefaultInstanceAlreadySetUp() {
      return ExMsg_DefaultInstanceAlreadySetUp(resourceCulture);
    }
    #endregion [ ExMsg_DefaultInstanceAlreadySetUp ]

    #region [ ExMsg_DirectoryDoNotExist ]
	
    /// <summary>
    ///   Looks up a localized string similar to Directory do not exist: {0}
    /// </summary>
    public static string GetExMsg_DirectoryDoNotExist(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DirectoryDoNotExist", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Directory do not exist: {0}
    /// </summary>
    public static string GetExMsg_DirectoryDoNotExist() {
      return GetExMsg_DirectoryDoNotExist(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Directory do not exist: {0}
    /// </summary>
    public static string ExMsg_DirectoryDoNotExist(global::System.Globalization.CultureInfo __culture, string path) {
      string format = ResourceManager.GetString("ExMsg_DirectoryDoNotExist", __culture);
      return string.Format(__culture, format, path);
    }

    /// <summary>
    ///   Looks up a localized string similar to Directory do not exist: {0}
    /// </summary>
    public static string ExMsg_DirectoryDoNotExist(string path) {
      return ExMsg_DirectoryDoNotExist(resourceCulture, path);
    }
    #endregion [ ExMsg_DirectoryDoNotExist ]

    #region [ ExMsg_DoNotSupportBinarySerialization ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support binary serialization
    /// </summary>
    public static string GetExMsg_DoNotSupportBinarySerialization(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportBinarySerialization", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support binary serialization
    /// </summary>
    public static string GetExMsg_DoNotSupportBinarySerialization() {
      return GetExMsg_DoNotSupportBinarySerialization(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support binary serialization
    /// </summary>
    public static string ExMsg_DoNotSupportBinarySerialization(global::System.Globalization.CultureInfo __culture, string type) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportBinarySerialization", __culture);
      return string.Format(__culture, format, type);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} do not support binary serialization
    /// </summary>
    public static string ExMsg_DoNotSupportBinarySerialization(string type) {
      return ExMsg_DoNotSupportBinarySerialization(resourceCulture, type);
    }
    #endregion [ ExMsg_DoNotSupportBinarySerialization ]

    #region [ ExMsg_DoNotSupportCompare ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support value comparison
    /// </summary>
    public static string GetExMsg_DoNotSupportCompare(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportCompare", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support value comparison
    /// </summary>
    public static string GetExMsg_DoNotSupportCompare() {
      return GetExMsg_DoNotSupportCompare(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support value comparison
    /// </summary>
    public static string ExMsg_DoNotSupportCompare(global::System.Globalization.CultureInfo __culture, string type) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportCompare", __culture);
      return string.Format(__culture, format, type);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} do not support value comparison
    /// </summary>
    public static string ExMsg_DoNotSupportCompare(string type) {
      return ExMsg_DoNotSupportCompare(resourceCulture, type);
    }
    #endregion [ ExMsg_DoNotSupportCompare ]

    #region [ ExMsg_DoNotSupportIncrementDecrement ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support increment/decrement
    /// </summary>
    public static string GetExMsg_DoNotSupportIncrementDecrement(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportIncrementDecrement", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support increment/decrement
    /// </summary>
    public static string GetExMsg_DoNotSupportIncrementDecrement() {
      return GetExMsg_DoNotSupportIncrementDecrement(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support increment/decrement
    /// </summary>
    public static string ExMsg_DoNotSupportIncrementDecrement(global::System.Globalization.CultureInfo __culture, string type) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportIncrementDecrement", __culture);
      return string.Format(__culture, format, type);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} do not support increment/decrement
    /// </summary>
    public static string ExMsg_DoNotSupportIncrementDecrement(string type) {
      return ExMsg_DoNotSupportIncrementDecrement(resourceCulture, type);
    }
    #endregion [ ExMsg_DoNotSupportIncrementDecrement ]

    #region [ ExMsg_DoNotSupportStringSerialization ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support string serialization
    /// </summary>
    public static string GetExMsg_DoNotSupportStringSerialization(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportStringSerialization", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support string serialization
    /// </summary>
    public static string GetExMsg_DoNotSupportStringSerialization() {
      return GetExMsg_DoNotSupportStringSerialization(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} do not support string serialization
    /// </summary>
    public static string ExMsg_DoNotSupportStringSerialization(global::System.Globalization.CultureInfo __culture, string type) {
      string format = ResourceManager.GetString("ExMsg_DoNotSupportStringSerialization", __culture);
      return string.Format(__culture, format, type);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} do not support string serialization
    /// </summary>
    public static string ExMsg_DoNotSupportStringSerialization(string type) {
      return ExMsg_DoNotSupportStringSerialization(resourceCulture, type);
    }
    #endregion [ ExMsg_DoNotSupportStringSerialization ]

    #region [ ExMsg_DuplicatedPropertyInCollection ]
	
    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated {0} in collection {1}: {2}
    /// </summary>
    public static string GetExMsg_DuplicatedPropertyInCollection(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DuplicatedPropertyInCollection", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated {0} in collection {1}: {2}
    /// </summary>
    public static string GetExMsg_DuplicatedPropertyInCollection() {
      return GetExMsg_DuplicatedPropertyInCollection(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated {0} in collection {1}: {2}
    /// </summary>
    public static string ExMsg_DuplicatedPropertyInCollection(global::System.Globalization.CultureInfo __culture, string propertyName, string collectionName, string identifier) {
      string format = ResourceManager.GetString("ExMsg_DuplicatedPropertyInCollection", __culture);
      return string.Format(__culture, format, propertyName, collectionName, identifier);
    }

    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated {0} in collection {1}: {2}
    /// </summary>
    public static string ExMsg_DuplicatedPropertyInCollection(string propertyName, string collectionName, string identifier) {
      return ExMsg_DuplicatedPropertyInCollection(resourceCulture, propertyName, collectionName, identifier);
    }
    #endregion [ ExMsg_DuplicatedPropertyInCollection ]

    #region [ ExMsg_EnumerableExtensions_EmptyCollection ]
	
    /// <summary>
    ///   Looks up a localized string similar to Empty collection.
    /// </summary>
    public static string ExMsg_EnumerableExtensions_EmptyCollection(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_EnumerableExtensions_EmptyCollection", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Empty collection.
    /// </summary>
    public static string GetExMsg_EnumerableExtensions_EmptyCollection() {
      return ExMsg_EnumerableExtensions_EmptyCollection(resourceCulture);
    }
    #endregion [ ExMsg_EnumerableExtensions_EmptyCollection ]

    #region [ ExMsg_EnumerableExtensions_EmptyCollectionNoMinException ]
	
    /// <summary>
    ///   Looks up a localized string similar to Empty collection cannot have a minimum.
    /// </summary>
    public static string ExMsg_EnumerableExtensions_EmptyCollectionNoMinException(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_EnumerableExtensions_EmptyCollectionNoMinException", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Empty collection cannot have a minimum.
    /// </summary>
    public static string GetExMsg_EnumerableExtensions_EmptyCollectionNoMinException() {
      return ExMsg_EnumerableExtensions_EmptyCollectionNoMinException(resourceCulture);
    }
    #endregion [ ExMsg_EnumerableExtensions_EmptyCollectionNoMinException ]

    #region [ ExMsg_EnumerableExtensions_NoMatchingElementException ]
	
    /// <summary>
    ///   Looks up a localized string similar to No matching element found.
    /// </summary>
    public static string ExMsg_EnumerableExtensions_NoMatchingElementException(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_EnumerableExtensions_NoMatchingElementException", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to No matching element found.
    /// </summary>
    public static string GetExMsg_EnumerableExtensions_NoMatchingElementException() {
      return ExMsg_EnumerableExtensions_NoMatchingElementException(resourceCulture);
    }
    #endregion [ ExMsg_EnumerableExtensions_NoMatchingElementException ]

    #region [ ExMsg_EnumTypeCannotHaveTypeAsBaseType ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} enum type cannot have {1} as base type.
    /// </summary>
    public static string GetExMsg_EnumTypeCannotHaveTypeAsBaseType(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_EnumTypeCannotHaveTypeAsBaseType", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} enum type cannot have {1} as base type.
    /// </summary>
    public static string GetExMsg_EnumTypeCannotHaveTypeAsBaseType() {
      return GetExMsg_EnumTypeCannotHaveTypeAsBaseType(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} enum type cannot have {1} as base type.
    /// </summary>
    public static string ExMsg_EnumTypeCannotHaveTypeAsBaseType(global::System.Globalization.CultureInfo __culture, string type, string baseType) {
      string format = ResourceManager.GetString("ExMsg_EnumTypeCannotHaveTypeAsBaseType", __culture);
      return string.Format(__culture, format, type, baseType);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} enum type cannot have {1} as base type.
    /// </summary>
    public static string ExMsg_EnumTypeCannotHaveTypeAsBaseType(string type, string baseType) {
      return ExMsg_EnumTypeCannotHaveTypeAsBaseType(resourceCulture, type, baseType);
    }
    #endregion [ ExMsg_EnumTypeCannotHaveTypeAsBaseType ]

    #region [ ExMsg_EnumTypeRequiresAtLeastOneLiteral ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} enum type requires at least one literal.
    /// </summary>
    public static string GetExMsg_EnumTypeRequiresAtLeastOneLiteral(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_EnumTypeRequiresAtLeastOneLiteral", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} enum type requires at least one literal.
    /// </summary>
    public static string GetExMsg_EnumTypeRequiresAtLeastOneLiteral() {
      return GetExMsg_EnumTypeRequiresAtLeastOneLiteral(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} enum type requires at least one literal.
    /// </summary>
    public static string ExMsg_EnumTypeRequiresAtLeastOneLiteral(global::System.Globalization.CultureInfo __culture, string type) {
      string format = ResourceManager.GetString("ExMsg_EnumTypeRequiresAtLeastOneLiteral", __culture);
      return string.Format(__culture, format, type);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} enum type requires at least one literal.
    /// </summary>
    public static string ExMsg_EnumTypeRequiresAtLeastOneLiteral(string type) {
      return ExMsg_EnumTypeRequiresAtLeastOneLiteral(resourceCulture, type);
    }
    #endregion [ ExMsg_EnumTypeRequiresAtLeastOneLiteral ]

    #region [ ExMsg_IncrementOutOfRange ]
	
    /// <summary>
    ///   Looks up a localized string similar to Incrementing {0} is out of range for type {1}
    /// </summary>
    public static string GetExMsg_IncrementOutOfRange(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_IncrementOutOfRange", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Incrementing {0} is out of range for type {1}
    /// </summary>
    public static string GetExMsg_IncrementOutOfRange() {
      return GetExMsg_IncrementOutOfRange(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Incrementing {0} is out of range for type {1}
    /// </summary>
    public static string ExMsg_IncrementOutOfRange(global::System.Globalization.CultureInfo __culture, string value, string type) {
      string format = ResourceManager.GetString("ExMsg_IncrementOutOfRange", __culture);
      return string.Format(__culture, format, value, type);
    }

    /// <summary>
    ///   Looks up a localized string similar to Incrementing {0} is out of range for type {1}
    /// </summary>
    public static string ExMsg_IncrementOutOfRange(string value, string type) {
      return ExMsg_IncrementOutOfRange(resourceCulture, value, type);
    }
    #endregion [ ExMsg_IncrementOutOfRange ]

    #region [ ExMsg_InvalidFreezingOperationException ]
	
    /// <summary>
    ///   Looks up a localized string similar to Invalid freezing operation.
    /// </summary>
    public static string ExMsg_InvalidFreezingOperationException(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_InvalidFreezingOperationException", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Invalid freezing operation.
    /// </summary>
    public static string GetExMsg_InvalidFreezingOperationException() {
      return ExMsg_InvalidFreezingOperationException(resourceCulture);
    }
    #endregion [ ExMsg_InvalidFreezingOperationException ]

    #region [ ExMsg_InvalidSetUp ]
	
    /// <summary>
    ///   Looks up a localized string similar to Invalid setup
    /// </summary>
    public static string ExMsg_InvalidSetUp(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_InvalidSetUp", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Invalid setup
    /// </summary>
    public static string GetExMsg_InvalidSetUp() {
      return ExMsg_InvalidSetUp(resourceCulture);
    }
    #endregion [ ExMsg_InvalidSetUp ]

    #region [ ExMsg_ItemConverterBase_ErrorConvertingSource ]
	
    /// <summary>
    ///   Looks up a localized string similar to Error converting source item.
    /// </summary>
    public static string ExMsg_ItemConverterBase_ErrorConvertingSource(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_ItemConverterBase_ErrorConvertingSource", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Error converting source item.
    /// </summary>
    public static string GetExMsg_ItemConverterBase_ErrorConvertingSource() {
      return ExMsg_ItemConverterBase_ErrorConvertingSource(resourceCulture);
    }
    #endregion [ ExMsg_ItemConverterBase_ErrorConvertingSource ]

    #region [ ExMsg_MissingEnumLiteralValue ]
	
    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value on literal {0}
    /// </summary>
    public static string GetExMsg_MissingEnumLiteralValue(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_MissingEnumLiteralValue", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value on literal {0}
    /// </summary>
    public static string GetExMsg_MissingEnumLiteralValue() {
      return GetExMsg_MissingEnumLiteralValue(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value on literal {0}
    /// </summary>
    public static string ExMsg_MissingEnumLiteralValue(global::System.Globalization.CultureInfo __culture, string literalIdentifier) {
      string format = ResourceManager.GetString("ExMsg_MissingEnumLiteralValue", __culture);
      return string.Format(__culture, format, literalIdentifier);
    }

    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value on literal {0}
    /// </summary>
    public static string ExMsg_MissingEnumLiteralValue(string literalIdentifier) {
      return ExMsg_MissingEnumLiteralValue(resourceCulture, literalIdentifier);
    }
    #endregion [ ExMsg_MissingEnumLiteralValue ]

    #region [ ExMsg_Optional_HasNoValueException ]
	
    /// <summary>
    ///   Looks up a localized string similar to Optional value has no value.
    /// </summary>
    public static string ExMsg_Optional_HasNoValueException(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_Optional_HasNoValueException", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Optional value has no value.
    /// </summary>
    public static string GetExMsg_Optional_HasNoValueException() {
      return ExMsg_Optional_HasNoValueException(resourceCulture);
    }
    #endregion [ ExMsg_Optional_HasNoValueException ]

    #region [ ExMsg_PropertyCannotBeEmpty ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be empty.
    /// </summary>
    public static string GetExMsg_PropertyCannotBeEmpty(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_PropertyCannotBeEmpty", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be empty.
    /// </summary>
    public static string GetExMsg_PropertyCannotBeEmpty() {
      return GetExMsg_PropertyCannotBeEmpty(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be empty.
    /// </summary>
    public static string ExMsg_PropertyCannotBeEmpty(global::System.Globalization.CultureInfo __culture, string property) {
      string format = ResourceManager.GetString("ExMsg_PropertyCannotBeEmpty", __culture);
      return string.Format(__culture, format, property);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be empty.
    /// </summary>
    public static string ExMsg_PropertyCannotBeEmpty(string property) {
      return ExMsg_PropertyCannotBeEmpty(resourceCulture, property);
    }
    #endregion [ ExMsg_PropertyCannotBeEmpty ]

    #region [ ExMsg_PropertyCannotBeNull ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be null.
    /// </summary>
    public static string GetExMsg_PropertyCannotBeNull(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_PropertyCannotBeNull", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be null.
    /// </summary>
    public static string GetExMsg_PropertyCannotBeNull() {
      return GetExMsg_PropertyCannotBeNull(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be null.
    /// </summary>
    public static string ExMsg_PropertyCannotBeNull(global::System.Globalization.CultureInfo __culture, string property) {
      string format = ResourceManager.GetString("ExMsg_PropertyCannotBeNull", __culture);
      return string.Format(__culture, format, property);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be null.
    /// </summary>
    public static string ExMsg_PropertyCannotBeNull(string property) {
      return ExMsg_PropertyCannotBeNull(resourceCulture, property);
    }
    #endregion [ ExMsg_PropertyCannotBeNull ]

    #region [ ExMsg_PropertyCannotBeWhitespace ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be blank.
    /// </summary>
    public static string GetExMsg_PropertyCannotBeWhitespace(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_PropertyCannotBeWhitespace", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be blank.
    /// </summary>
    public static string GetExMsg_PropertyCannotBeWhitespace() {
      return GetExMsg_PropertyCannotBeWhitespace(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be blank.
    /// </summary>
    public static string ExMsg_PropertyCannotBeWhitespace(global::System.Globalization.CultureInfo __culture, string property) {
      string format = ResourceManager.GetString("ExMsg_PropertyCannotBeWhitespace", __culture);
      return string.Format(__culture, format, property);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be blank.
    /// </summary>
    public static string ExMsg_PropertyCannotBeWhitespace(string property) {
      return ExMsg_PropertyCannotBeWhitespace(resourceCulture, property);
    }
    #endregion [ ExMsg_PropertyCannotBeWhitespace ]

    #region [ ExMsg_Reference_CanChangeValue ]
	
    /// <summary>
    ///   Looks up a localized string similar to Can't change value.
    /// </summary>
    public static string ExMsg_Reference_CanChangeValue(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_Reference_CanChangeValue", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Can't change value.
    /// </summary>
    public static string GetExMsg_Reference_CanChangeValue() {
      return ExMsg_Reference_CanChangeValue(resourceCulture);
    }
    #endregion [ ExMsg_Reference_CanChangeValue ]

    #region [ ExMsg_TrieNode_DuplicatedKeyNotAllowed ]
	
    /// <summary>
    ///   Looks up a localized string similar to Duplicated key not allowed on trie.
    /// </summary>
    public static string ExMsg_TrieNode_DuplicatedKeyNotAllowed(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("ExMsg_TrieNode_DuplicatedKeyNotAllowed", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to Duplicated key not allowed on trie.
    /// </summary>
    public static string GetExMsg_TrieNode_DuplicatedKeyNotAllowed() {
      return ExMsg_TrieNode_DuplicatedKeyNotAllowed(resourceCulture);
    }
    #endregion [ ExMsg_TrieNode_DuplicatedKeyNotAllowed ]

    #region [ ExMsg_WrongEnumLiteralValue ]
	
    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value {0} on literal {1}
    /// </summary>
    public static string GetExMsg_WrongEnumLiteralValue(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_WrongEnumLiteralValue", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value {0} on literal {1}
    /// </summary>
    public static string GetExMsg_WrongEnumLiteralValue() {
      return GetExMsg_WrongEnumLiteralValue(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value {0} on literal {1}
    /// </summary>
    public static string ExMsg_WrongEnumLiteralValue(global::System.Globalization.CultureInfo __culture, string value, string literalIdentifier) {
      string format = ResourceManager.GetString("ExMsg_WrongEnumLiteralValue", __culture);
      return string.Format(__culture, format, value, literalIdentifier);
    }

    /// <summary>
    ///   Looks up a localized string similar to Missing enum base value {0} on literal {1}
    /// </summary>
    public static string ExMsg_WrongEnumLiteralValue(string value, string literalIdentifier) {
      return ExMsg_WrongEnumLiteralValue(resourceCulture, value, literalIdentifier);
    }
    #endregion [ ExMsg_WrongEnumLiteralValue ]

    #region [ NullString ]
	
    /// <summary>
    ///   Looks up a localized string similar to (null)
    /// </summary>
    public static string NullString(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("NullString", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to (null)
    /// </summary>
    public static string GetNullString() {
      return NullString(resourceCulture);
    }
    #endregion [ NullString ]

    #region [ Optional_NoHasValueToString ]
	
    /// <summary>
    ///   Looks up a localized string similar to (no value)
    /// </summary>
    public static string Optional_NoHasValueToString(global::System.Globalization.CultureInfo __culture) {
      return ResourceManager.GetString("Optional_NoHasValueToString", __culture);
    }

    /// <summary>
    ///   Looks up a localized string similar to (no value)
    /// </summary>
    public static string GetOptional_NoHasValueToString() {
      return Optional_NoHasValueToString(resourceCulture);
    }
    #endregion [ Optional_NoHasValueToString ]

    #region [ ExMsg_DuplicatedObjectsInCollection ]
	
    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated object in collection {0}: {1}
    /// </summary>
    public static string GetExMsg_DuplicatedObjectsInCollection(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_DuplicatedObjectsInCollection", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated object in collection {0}: {1}
    /// </summary>
    public static string GetExMsg_DuplicatedObjectsInCollection() {
      return GetExMsg_DuplicatedObjectsInCollection(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated object in collection {0}: {1}
    /// </summary>
    public static string ExMsg_DuplicatedObjectsInCollection(global::System.Globalization.CultureInfo __culture, string collectionName, string identifier) {
      string format = ResourceManager.GetString("ExMsg_DuplicatedObjectsInCollection", __culture);
      return string.Format(__culture, format, collectionName, identifier);
    }

    /// <summary>
    ///   Looks up a localized string similar to At least one duplicated object in collection {0}: {1}
    /// </summary>
    public static string ExMsg_DuplicatedObjectsInCollection(string collectionName, string identifier) {
      return ExMsg_DuplicatedObjectsInCollection(resourceCulture, collectionName, identifier);
    }
    #endregion [ ExMsg_DuplicatedObjectsInCollection ]

    #region [ ExMsg_ValueIsNotConformantWithDataType ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} is not conformant with data type {1}.
    /// </summary>
    public static string GetExMsg_ValueIsNotConformantWithDataType(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_ValueIsNotConformantWithDataType", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} is not conformant with data type {1}.
    /// </summary>
    public static string GetExMsg_ValueIsNotConformantWithDataType() {
      return GetExMsg_ValueIsNotConformantWithDataType(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} is not conformant with data type {1}.
    /// </summary>
    public static string ExMsg_ValueIsNotConformantWithDataType(global::System.Globalization.CultureInfo __culture, object value, string dataTypeName) {
      string format = ResourceManager.GetString("ExMsg_ValueIsNotConformantWithDataType", __culture);
      return string.Format(__culture, format, value, dataTypeName);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} is not conformant with data type {1}.
    /// </summary>
    public static string ExMsg_ValueIsNotConformantWithDataType(object value, string dataTypeName) {
      return ExMsg_ValueIsNotConformantWithDataType(resourceCulture, value, dataTypeName);
    }
    #endregion [ ExMsg_ValueIsNotConformantWithDataType ]

    #region [ ExMsg_BaseClassCycle ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} forms a cycle with its base classes.
    /// </summary>
    public static string GetExMsg_BaseClassCycle(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_BaseClassCycle", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} forms a cycle with its base classes.
    /// </summary>
    public static string GetExMsg_BaseClassCycle() {
      return GetExMsg_BaseClassCycle(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} forms a cycle with its base classes.
    /// </summary>
    public static string ExMsg_BaseClassCycle(global::System.Globalization.CultureInfo __culture, string className) {
      string format = ResourceManager.GetString("ExMsg_BaseClassCycle", __culture);
      return string.Format(__culture, format, className);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} forms a cycle with its base classes.
    /// </summary>
    public static string ExMsg_BaseClassCycle(string className) {
      return ExMsg_BaseClassCycle(resourceCulture, className);
    }
    #endregion [ ExMsg_BaseClassCycle ]

    #region [ ExMsg_MetaClassMustBeFrozen ]
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be frozen in order to be used as the meta class of an object.
    /// </summary>
    public static string GetExMsg_MetaClassMustBeFrozen(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_MetaClassMustBeFrozen", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be frozen in order to be used as the meta class of an object.
    /// </summary>
    public static string GetExMsg_MetaClassMustBeFrozen() {
      return GetExMsg_MetaClassMustBeFrozen(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to {0} must be frozen in order to be used as the meta class of an object.
    /// </summary>
    public static string ExMsg_MetaClassMustBeFrozen(global::System.Globalization.CultureInfo __culture, string className) {
      string format = ResourceManager.GetString("ExMsg_MetaClassMustBeFrozen", __culture);
      return string.Format(__culture, format, className);
    }

    /// <summary>
    ///   Looks up a localized string similar to {0} must be frozen in order to be used as the meta class of an object.
    /// </summary>
    public static string ExMsg_MetaClassMustBeFrozen(string className) {
      return ExMsg_MetaClassMustBeFrozen(resourceCulture, className);
    }
    #endregion [ ExMsg_MetaClassMustBeFrozen ]

    #region [ ExMsg_ObjectMustBeFrozen ]
	
    /// <summary>
    ///   Looks up a localized string similar to Object must be frozen to access this feature:{0}
    /// </summary>
    public static string GetExMsg_ObjectMustBeFrozen(global::System.Globalization.CultureInfo __culture) {
      string format = ResourceManager.GetString("ExMsg_ObjectMustBeFrozen", __culture);
      return format;
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Object must be frozen to access this feature:{0}
    /// </summary>
    public static string GetExMsg_ObjectMustBeFrozen() {
      return GetExMsg_ObjectMustBeFrozen(resourceCulture);
    }
	
    /// <summary>
    ///   Looks up a localized string similar to Object must be frozen to access this feature:{0}
    /// </summary>
    public static string ExMsg_ObjectMustBeFrozen(global::System.Globalization.CultureInfo __culture, string featureName) {
      string format = ResourceManager.GetString("ExMsg_ObjectMustBeFrozen", __culture);
      return string.Format(__culture, format, featureName);
    }

    /// <summary>
    ///   Looks up a localized string similar to Object must be frozen to access this feature:{0}
    /// </summary>
    public static string ExMsg_ObjectMustBeFrozen(string featureName) {
      return ExMsg_ObjectMustBeFrozen(resourceCulture, featureName);
    }
    #endregion [ ExMsg_ObjectMustBeFrozen ]
  }
}
